// Generated by Dagger (https://dagger.dev).
package app.swiftbills.di;

import app.swiftbills.data.home.CustomersRepository;
import app.swiftbills.data.home.CustomersRepositoryImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCustomersRepositoryFactory implements Factory<CustomersRepository> {
  private final AppModule module;

  private final Provider<CustomersRepositoryImpl> implProvider;

  public AppModule_ProvideCustomersRepositoryFactory(AppModule module,
      Provider<CustomersRepositoryImpl> implProvider) {
    this.module = module;
    this.implProvider = implProvider;
  }

  @Override
  public CustomersRepository get() {
    return provideCustomersRepository(module, implProvider.get());
  }

  public static AppModule_ProvideCustomersRepositoryFactory create(AppModule module,
      Provider<CustomersRepositoryImpl> implProvider) {
    return new AppModule_ProvideCustomersRepositoryFactory(module, implProvider);
  }

  public static CustomersRepository provideCustomersRepository(AppModule instance,
      CustomersRepositoryImpl impl) {
    return Preconditions.checkNotNullFromProvides(instance.provideCustomersRepository(impl));
  }
}
